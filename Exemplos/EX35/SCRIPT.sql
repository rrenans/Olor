SET GLOBAL log_bin_trust_function_creators = 1;
SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBFUNCAO;
CREATE DATABASE DBFUNCAO;
USE DBFUNCAO;

CREATE TABLE VALORES (
	NUMERO_A INT
    , NUMERO_B INT
);

INSERT INTO VALORES VALUES(RAND() * 100, RAND() * 100);
INSERT INTO VALORES VALUES(RAND() * 100, RAND() * 100);
INSERT INTO VALORES VALUES(RAND() * 100, RAND() * 100);
INSERT INTO VALORES VALUES(RAND() * 100, RAND() * 100);
INSERT INTO VALORES VALUES(RAND() * 100, RAND() * 100);



DELIMITER $$

CREATE FUNCTION FN_ADICAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_A + pNUMERO_B;

    RETURN vRESULTADO;
END $$

CREATE FUNCTION FN_SUBTRACAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_A - pNUMERO_B;

    RETURN vRESULTADO;
END $$

CREATE FUNCTION FN_MULTIPLICACAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_A * pNUMERO_B;

    RETURN vRESULTADO;
END $$

CREATE FUNCTION FN_DIVISAO(pNUMERO_A INT, pNUMERO_B INT) RETURNS NUMERIC(8,2)
BEGIN
	DECLARE vRESULTADO NUMERIC(8,2);
    SET vRESULTADO = pNUMERO_A / pNUMERO_B;

    RETURN vRESULTADO;
END $$

CREATE FUNCTION FN_CALCULADORA_A(pNUMERO_A INT, pNUMERO_B INT, pOPERADOR CHAR(1)) RETURNS NUMERIC(8,2)
BEGIN

	DECLARE vRESULTADO NUMERIC(8,2);
    
	CASE pOPERADOR
		WHEN '+' THEN
			SET vRESULTADO = FN_ADICAO(pNUMERO_A, pNUMERO_B);
		WHEN '-' THEN
			SET vRESULTADO = FN_SUBTRACAO(pNUMERO_A, pNUMERO_B);
		WHEN '*' THEN
			SET vRESULTADO = FN_MULTIPLICACAO(pNUMERO_A, pNUMERO_B);
		WHEN '/' THEN
			SET vRESULTADO = FN_DIVISAO(pNUMERO_A, pNUMERO_B);
		ELSE
			SET vRESULTADO = NULL;
	END CASE;
    
	RETURN vRESULTADO;
    
END $$

CREATE FUNCTION FN_CALCULADORA_B(pNUMERO_A INT, pNUMERO_B INT, pOPERADOR CHAR(1)) RETURNS NUMERIC(8,2)
BEGIN

	DECLARE vRESULTADO NUMERIC(8,2);

	IF(pOPERADOR = '+') THEN
		SET vRESULTADO = FN_ADICAO(pNUMERO_A, pNUMERO_B);
    ELSE
		IF(pOPERADOR = '-') THEN
			SET vRESULTADO = FN_SUBTRACAO(pNUMERO_A, pNUMERO_B);
		ELSE
			IF(pOPERADOR = '*') THEN
				SET vRESULTADO = FN_MULTIPLICACAO(pNUMERO_A, pNUMERO_B);
			ELSE
				IF(pOPERADOR = '/') THEN
					SET vRESULTADO = FN_DIVISAO(pNUMERO_A, pNUMERO_B);
				ELSE
					SET vRESULTADO = NULL;    
				END IF;
			END IF;
		END IF;
    END IF;
    
	RETURN vRESULTADO;
END $$

CREATE FUNCTION FN_PRIMO (pNUMERO INT) RETURNS CHAR(1)
BEGIN
	DECLARE vRESULTADO CHAR(1);
    DECLARE vCONTADOR INT;
    
    SET vRESULTADO = 'S';
    SET vCONTADOR = pNUMERO - 1;
    
    WHILE (vCONTADOR > 1)AND(vRESULTADO = 'S')DO
    
		IF ((pNUMERO % vCONTADOR) = 0) THEN
			SET vRESULTADO = 'N';
        END IF;
    
		SET vCONTADOR = vCONTADOR - 1;
    END WHILE;

	RETURN vRESULTADO;
END $$


CREATE FUNCTION FN_IDADE (pDTNASCIMENTO DATE) RETURNS INT
BEGIN
	DECLARE vIDADE INT;
    
    SET vIDADE = YEAR(NOW()) - YEAR(pDTNASCIMENTO);
 
	IF(date_add(pDTNASCIMENTO, interval vIDADE year) > NOW() ) THEN
		SET vIDADE = vIDADE - 1;
    END IF;
    
    RETURN vIDADE;
 
END $$

CREATE FUNCTION FN_NIVER(pDATANASCIMENTO DATE) RETURNS DATE
BEGIN
	DECLARE vQTDE_ANOS INT;
    
    SET vQTDE_ANOS = YEAR(NOW()) - YEAR(pDATANASCIMENTO);

	IF(DATE_ADD(pDATANASCIMENTO, INTERVAL vQTDE_ANOS YEAR) < NOW() ) THEN
		RETURN DATE_ADD(pDATANASCIMENTO, INTERVAL vQTDE_ANOS + 1 YEAR);
    ELSE
		RETURN DATE_ADD(pDATANASCIMENTO, INTERVAL vQTDE_ANOS YEAR);
    END IF;

END $$


DELIMITER ;

SELECT FN_NIVER('1981-01-01');

